<project name="MyProject" default="dist" basedir=".">
	<description>
    simple example build file
  </description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="test.dir" location="build"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="report.dir" location="report"/>


	<path id="JUnit4.libraryclasspath">
		 <pathelement location="locallib/junit.jar" />
		  <pathelement location="locallib/hamcrest-core-1.3.jar" />
	</path>
	
	<path id="Ant1.classpath">
		<pathelement location="bin"/>
		<pathelement location="."/>
		<path refid="JUnit4.libraryclasspath"/>
		<!--<path refid="hamcrest-core-1.3.libraryclasspath"/>-->
		
	</path>

	<target name="init" depends = "clean">
		<!-- Create the time stamp -->
		<echo message="The base directory: ${basedir}"/>     
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init" description="compile the source">
		<javac  srcdir="${src}" destdir="${build}"  includeantruntime="false"  classpath="junit.jar"/>
	</target>

	<target name="dist" depends="junit" description="generate the distribution">
		<mkdir dir="${dist}/lib"/>
		<jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
	</target>
	
	<target name="junit" depends="compile">

	    <junit printsummary="yes" haltonfailure="yes" fork="true" >

		<!-- Project classpath, must include junit.jar -->
		<classpath refid="Ant1.classpath" />

		<!-- test class -->
		<classpath location="${test.dir}" />

		<test name="testProjecttestcases.TestCases" haltonfailure="no" todir="${report.dir}">
			<formatter type="plain" />
			<formatter type="xml" />

		</test>

	  </junit>
	</target>
	<!--<target name="junit" depends="compile">
		<junit printsummary="on" fork="true" haltonfailure="yes">
			<classpath refid="Ant1.classpath" />
			<classpath location="${test.dir}" />
			<formatter type="xml" />
			<batchtest >
				<fileset dir="${test.dir}">
					<include name="**/TestCases.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>-->

	<target name="clean" description="clean up">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>